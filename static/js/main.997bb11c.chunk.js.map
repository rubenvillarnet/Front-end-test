{"version":3,"sources":["lib/ApiProvider.js","components/Paginate.jsx","components/Albums.jsx","components/ModalPhoto.jsx","components/Photos.jsx","components/Header.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ApiProvider","Object","classCallCheck","this","service","axios","create","baseURL","get","then","response","data","catch","error","id","concat","Paginate","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","totalPages","Math","ceil","totalItems","itemsPerPage","prevProps","setState","objectSpread","_this$props","currentPage","paginate","react_default","a","createElement","Pagination_default","Item","onClick","active","Component","Albums","albums","paginatedAlbums","listAlbums","slice","length","page","_this$state","from","to","toConsumableArray","_this2","Container_default","className","Row_default","Col_default","Paginate_Paginate","Table_default","responsive","bordered","hover","map","album","key","userId","title","react_router_dom","ModalPhoto","show","onHide","img","alt","Modal_default","size","centered","Header","closeButton","Body","Image_default","src","fluid","Photos","modal","searchInput","allPhotos","photos","paginatedPhotos","listPhotos","match","params","e","filteredPhotos","filter","photo","toLowerCase","includes","target","value","Form_default","FormControl_default","type","placeholder","onChange","handleForm","xs","sm","lg","Card_default","Img","variant","thumbnailUrl","showModal","url","Text","Button_default","Spinner_default","animation","ModalPhoto_ModalPhoto","closeModal","Jumbotron_default","location","pathname","withRouter","App","components_Header","react_router","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.997bb11c.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class ApiProvider{\n  constructor(){\n    this.service = axios.create({\n      baseURL: 'https://jsonplaceholder.typicode.com/albums'\n    })\n  }\n\n  listAlbums(){\n    return this.service.get('/')\n    .then(response => response.data)\n    .catch(error => error)\n  }\n\n  listPhotos(id){\n    return this.service.get(`${id}/photos`)\n    .then(response => response.data)\n    .catch(error => error)\n  }\n}","import React, { Component } from 'react'\n\nimport Pagination from 'react-bootstrap/Pagination';\n\n\nexport default class Paginate extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      totalPages: Math.ceil(this.props.totalItems / this.props.itemsPerPage)\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if(prevProps.totalItems !== this.props.totalItems){\n      this.setState({\n        ...this.state,\n        totalPages: Math.ceil(this.props.totalItems / this.props.itemsPerPage)\n      })\n    }\n  }\n\n  render() {\n    const {currentPage, paginate} = this.props\n    return (\n      <Pagination>\n        {currentPage > 0?<Pagination.Item\n          onClick={() => paginate(currentPage - 1)}\n          >Prev</Pagination.Item>:null}\n        <Pagination.Item active>{currentPage +1 }</Pagination.Item>\n        {currentPage +1 < this.state.totalPages?<Pagination.Item\n          onClick={() => paginate(currentPage + 1)}\n          >Next</Pagination.Item>:null}\n      </Pagination>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ApiProvider from '../lib/ApiProvider'\nimport { Link } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Paginate from './Paginate';\n\nexport default class Albums extends Component {\n  constructor(props){\n    super(props)\n    this.data = new ApiProvider()\n    this.state={\n      albums: [],\n      paginatedAlbums: [],\n      currentPage: 0,\n      itemsPerPage: 10,\n      totalItems: 0\n    }\n\n    this.data.listAlbums()\n    .then(albums => {\n      this.setState({\n      ...this.state,\n      albums,\n      paginatedAlbums: albums.slice(this.state.currentPage, this.state.itemsPerPage),\n      totalItems: albums.length\n    })\n  })\n  }\n\n  paginate(page){\n    const { albums, itemsPerPage} = this.state\n    const from = page * itemsPerPage \n    const to = from + itemsPerPage\n    const paginatedAlbums = [...albums].slice(from, to)\n    this.setState({\n      ...this.state,\n      paginatedAlbums,\n      currentPage: page\n    })\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Col>\n          <Paginate\n              currentPage={this.state.currentPage}\n              itemsPerPage={this.state.itemsPerPage}\n              totalItems={this.state.totalItems}\n              paginate={(page) => this.paginate(page)}/>\n            <Table responsive bordered hover>\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>UserId</th>\n                  <th>Title</th>\n                  <th>Open album</th>\n                </tr>\n              </thead>\n              <tbody>\n                  {this.state.paginatedAlbums.map(album => {\n                    return <tr key={album.id}>\n                      <td>{album.id}</td>\n                      <td>{album.userId}</td>\n                      <td>{album.title}</td>\n                      <td><Link to={`/album/${album.id}`}>Open</Link></td>\n                    </tr>\n                  })}\n              </tbody>\n            </Table>\n            <Paginate\n              currentPage={this.state.currentPage}\n              itemsPerPage={this.state.itemsPerPage}\n              totalItems={this.state.totalItems}\n              paginate={(page) => this.paginate(page)}/>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\n\n\nexport default class ModalPhoto extends Component {\n  render() {\n    const {show, onHide, img, alt} = this.props\n    return (\n      <Modal\n        show={show}\n        onHide={onHide}\n        size=\"lg\"\n        centered>\n        <Modal.Header closeButton>{alt}</Modal.Header>\n        <Modal.Body>\n          <Image src={img} alt={alt} fluid/>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ApiProvider from '../lib/ApiProvider'\nimport Container from 'react-bootstrap/Container';\nimport ModalPhoto from './ModalPhoto';\nimport Paginate from './Paginate';\n\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\n\nexport default class Photos extends Component {\n  constructor(props){\n    super(props)\n    this.data = new ApiProvider()\n    this.state = { \n      modal: {\n        show: false,\n        img: \"\",\n        title: \"\"\n      },\n      searchInput: \"\",\n      allPhotos: [],\n      photos: [],\n      paginatedPhotos: [],\n      currentPage: 0,\n      itemsPerPage: 12,\n      totalItems: 0\n    }\n    this.data.listPhotos(this.props.match.params.id)\n    .then(photos => this.setState({\n      ...this.state,\n      photos,\n      allPhotos: photos,\n      paginatedPhotos: photos.slice(this.state.currentPage, this.state.itemsPerPage),\n      totalItems: photos.length\n    }))\n  }\n\n  paginate(page){\n    const { photos, itemsPerPage} = this.state\n    const from = page * itemsPerPage \n    const to = from + itemsPerPage\n    const paginatedPhotos = [...photos].slice(from, to)\n    this.setState({\n      ...this.state,\n      paginatedPhotos,\n      currentPage: page\n    })\n  }\n\n\n  showModal(img, title){\n    this.setState({\n      ...this.state,\n      modal: {\n        show: true,\n        img,\n        title\n      }\n    })\n  }\n\n  closeModal(){\n    this.setState({\n      ...this.state,\n      modal: {\n        show: false,\n        img: \"\",\n        title: \"\"\n      }\n    })\n  }\n\n  handleForm(e){\n    /* newState.foods = this.allFoods.filter(comida => comida.name.toLowerCase().startsWith(query.toLowerCase())) */\n    const filteredPhotos = this.state.allPhotos.filter(photo =>\n      photo.title.toLowerCase().includes(e.target.value.toLowerCase()))\n\n    this.setState({\n      ...this.state,\n      searchInput: e.target.value,\n      photos: filteredPhotos,\n      paginatedPhotos: filteredPhotos.slice(this.state.currentPage, this.state.itemsPerPage),\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Paginate\n              currentPage={this.state.currentPage}\n              itemsPerPage={this.state.itemsPerPage}\n              totalItems={this.state.totalItems}\n              paginate={(page) => this.paginate(page)}/>\n          </Col>\n          <Col>\n            <Form>\n                <FormControl \n                  type=\"text\" \n                  placeholder=\"filter...\" \n                  value={this.state.searchInput}\n                  onChange={e=>this.handleForm(e)}/>\n            </Form>\n          </Col>\n        </Row>\n        <hr/>\n        <Row><Col>{this.state.photos.length} photos</Col></Row>\n        <Row>\n          {this.state.photos?\n          this.state.paginatedPhotos.map(photo =>{\n            return <Col xs={6} sm={4} lg={3} key={photo.id}>\n              <Card>\n                <Card.Img \n                  variant=\"top\" \n                  src={photo.thumbnailUrl}\n                  onClick={() => this.showModal(photo.url, photo.title)}/>\n                <Card.Body>\n                  <Card.Text>{photo.title}</Card.Text>\n                  <Button\n                    onClick={() => this.showModal(photo.url, photo.title)}\n                    >Open</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          }):\n          <div>\n            <Spinner animation=\"border\"/> Loading...\n          </div>\n          }\n        </Row>\n        <Row>\n          <Col>\n            <hr/>\n            <Paginate\n                  currentPage={this.state.currentPage}\n                  itemsPerPage={this.state.itemsPerPage}\n                  totalItems={this.state.totalItems}\n                  paginate={(page) => this.paginate(page)}/>\n          </Col>\n        </Row>\n        <ModalPhoto \n          show={this.state.modal.show}\n          onHide={()=> this.closeModal()}\n          img={this.state.modal.img}\n          alt={this.state.modal.title}/>\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {withRouter, Link} from 'react-router-dom';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <Jumbotron fluid>\n        <Container>\n          <h1>Front End Test</h1>\n          {this.props.location.pathname !== \"/\"?\n          <Link to=\"/\">Back to home</Link>: null}\n        </Container>\n      </Jumbotron>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import React from 'react';\nimport './App.css';\n\nimport { Switch, Route } from 'react-router-dom';\nimport Albums from './components/Albums';\nimport Photos from './components/Photos';\nimport Header from './components/Header';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Switch>\n        <Route exact path=\"/\" component={Albums}/>\n        <Route exact path=\"/album/:id\" component={Photos}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nReactDOM.render(\n  (<Router>\n    <App/>\n  </Router>)\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}